a) ACCESSING DATABASE:  (SELECT, Filtering using WHERE, ORDER BY Clauses)

1.    List all invoice items, avoid duplicates. 

	mysql> select * from Invoice_item;
	+--------+------+----------+
	| inv_id | pid  | quantity |
	+--------+------+----------+
	|    102 |    2 |        5 |
	|    103 |    2 |        1 |
	|    104 |    4 |       10 |
	|    101 |    1 |        2 |
	|    101 |    2 |        2 |
	+--------+------+----------+
	5 rows in set (0.00 sec)

	mysql> select distinct(inv_id)from Invoice_item;
	+--------+
	| inv_id |
	+--------+
	|    101 |
	|    102 |
	|    103 |
	|    104 |
	+--------+
	4 rows in set (0.01 sec)

2.    List the invoice details from 1st January 2024 to 31st march 2024  

ans:    mysql> select * from Invoice_master;
	+--------+---------+------------+
	| inv_id | cust_id | inv_date   |
	+--------+---------+------------+
	|    101 |   10002 | 2024-01-31 |
	|    103 |   10003 | 2023-06-28 |
	|    104 |   10003 | 2023-06-28 |
	|    105 |   10006 | 2023-07-28 |
	+--------+---------+------------+
	4 rows in set (0.00 sec)
	mysql> select * from Invoice_master where inv_date between "2024-01-01"and"2024-03-31";
	+--------+---------+------------+
	| inv_id | cust_id | inv_date   |
	+--------+---------+------------+
	|    101 |   10002 | 2024-01-31 |
	+--------+---------+------------+
	1 row in set (0.00 sec)

3.    List the customer details who not live in ‘tvm’. 

	mysql> select* from customer;
	+-------+------+-----------+---------+------------+
	| id    | name | address   | city    | ph_no      |
	+-------+------+-----------+---------+------------+
	| 10002 | xyz  | xyz_house | ekm     | 9188105507 |
	| 10003 | pqr  | apk_house | ksd     | 965648878  |
	| 10005 | pkr  | pkr_house | mlp     | 7034534922 |
	| 10006 | hdj  | hdj_house | ekm     | 758465846  |
	| 10007 | fbj  | fbj_house | calicut |            |
	| 10008 | kst  | kst_house | ekm     |            |
	| 10009 | gtf  | gtf_house | tvm     | 749578465  |
	+-------+------+-----------+---------+------------+
	7 rows in set (0.00 sec)

	mysql> select * from customer where city != "tvm";
	+-------+------+-----------+---------+------------+
	| id    | name | address   | city    | ph_no      |
	+-------+------+-----------+---------+------------+
	| 10002 | xyz  | xyz_house | ekm     | 9188105507 |
	| 10003 | pqr  | apk_house | ksd     | 965648878  |
	| 10005 | pkr  | pkr_house | mlp     | 7034534922 |
	| 10006 | hdj  | hdj_house | ekm     | 758465846  |
	| 10007 | fbj  | fbj_house | calicut |            |
	| 10008 | kst  | kst_house | ekm     |            |
	+-------+------+-----------+---------+------------+
	6 rows in set (0.01 sec)

4.    List the customers who have no phone number. 

	mysql> select * from customer;
	+-------+------+-----------+---------+------------+
	| id    | name | address   | city    | ph_no      |
	+-------+------+-----------+---------+------------+
	| 10002 | xyz  | xyz_house | ekm     | 9188105507 |
	| 10003 | pqr  | apk_house | ksd     | 965648878  |
	| 10005 | pkr  | pkr_house | mlp     | 7034534922 |
	| 10006 | hdj  | hdj_house | ekm     | 758465846  |
	| 10007 | fbj  | fbj_house | calicut | NULL       |
	| 10008 | kst  | kst_house | ekm     | NULL       |
	| 10009 | gtf  | gtf_house | tvm     | 749578465  |
	+-------+------+-----------+---------+------------+
	7 rows in set (0.00 sec)

	mysql> select * from customer where ph_no is null;
	+-------+------+-----------+---------+-------+
	| id    | name | address   | city    | ph_no |
	+-------+------+-----------+---------+-------+
	| 10007 | fbj  | fbj_house | calicut | NULL  |
	| 10008 | kst  | kst_house | ekm     | NULL  |
	+-------+------+-----------+---------+-------+
	2 rows in set (0.00 sec)

5.    Display customer names in descending order. 

	mysql> select name from customer order by name desc;
	+------+
	| name |
	+------+
	| xyz  |
	| pqr  |
	| pkr  |
	| kst  |
	| hdj  |
	| gtf  |
	| fbj  |
	+------+
	7 rows in set (0.00 sec)

6.    Display the customer details sorted in ascending by city and descending by names.

	mysql> select * from customer order by city asc,name desc;
	+-------+------+-----------+---------+------------+
	| id    | name | address   | city    | ph_no      |
	+-------+------+-----------+---------+------------+
	| 10007 | fbj  | fbj_house | calicut | NULL       |
	| 10002 | xyz  | xyz_house | ekm     | 9188105507 |
	| 10008 | kst  | kst_house | ekm     | NULL       |
	| 10006 | hdj  | hdj_house | ekm     | 758465846  |
	| 10003 | pqr  | apk_house | ksd     | 965648878  |
	| 10005 | pkr  | pkr_house | mlp     | 7034534922 |
	| 10009 | gtf  | gtf_house | tvm     | 749578465  |
	+-------+------+-----------+---------+------------+
	7 rows in set (0.00 sec)

7.    Find the customer names who have ‘e’ or ‘a’ in them and at least 3 characters in length

	mysql> select * from customer;
	+-------+------+-----------+---------+------------+
	| id    | name | address   | city    | ph_no      |
	+-------+------+-----------+---------+------------+
	| 10002 | xyz  | xyz_house | ekm     | 9188105507 |
	| 10003 | pqr  | apk_house | ksd     | 965648878  |
	| 10005 | pkr  | pkr_house | mlp     | 7034534922 |
	| 10006 | abc  | hdj_house | ekm     | 758465846  |
	| 10007 | fbj  | fbj_house | calicut | NULL       |
	| 10008 | kst  | kst_house | ekm     | NULL       |
	| 10009 | gtf  | gtf_house | tvm     | 749578465  |
	+-------+------+-----------+---------+------------+
	7 rows in set (0.00 sec)

	mysql> select name from customer where (name like '%e%' or name like '%a%') and length(name)>=3;
	+------+
	| name |
	+------+
	| abc  |
	+------+
	1 row in set (0.00 sec)
	
8.    List the names of customers their names have ‘r’ in second position.

	mysql> select * from customer;
	+-------+------+-----------+---------+------------+
	| id    | name | address   | city    | ph_no      |
	+-------+------+-----------+---------+------------+
	| 10002 | xyz  | xyz_house | ekm     | 9188105507 |
	| 10003 | pqr  | apk_house | ksd     | 965648878  |
	| 10005 | pkr  | pkr_house | mlp     | 7034534922 |
	| 10006 | abc  | hdj_house | ekm     | 758465846  |
	| 10007 | mrj  | fbj_house | calicut | NULL       |
	| 10008 | kst  | kst_house | ekm     | NULL       |
	| 10009 | gtf  | gtf_house | tvm     | 749578465  |
	+-------+------+-----------+---------+------------+
	7 rows in set (0.00 sec)

	mysql> select name from customer where name like '_r%';
	+------+
	| name |
	+------+
	| mrj  |
	+------+
	1 row in set (0.00 sec)


b) OPTIMIZING DATABASE:  (GROUP BY, AGGREGATE FUNCTIONS)

1.    List product name, price except soap on price order. 

	mysql> insert product values(6,'soap',60);
	Query OK, 1 row affected (0.00 sec)

	mysql> select * from product;
	+-----+--------+-------+
	| pid | pname  | price |
	+-----+--------+-------+
	|   1 | pen    |  66.3 |
	|   2 | pencil |    51 |
	|   3 | scale  | 107.1 |
	|   4 | rubber | 132.6 |
	|   5 | cutter |  1530 |
	|   6 | soap   |    60 |
	+-----+--------+-------+
	6 rows in set (0.00 sec)

	mysql> select pname,price from product where pname not like '%soap' order by price;
	+--------+-------+
	| pname  | price |
	+--------+-------+
	| pencil |    51 |
	| pen    |  66.3 |
	| scale  | 107.1 |
	| rubber | 132.6 |
	| cutter |  1530 |
	+--------+-------+
	5 rows in set (0.00 sec)

2.    Find minimum, maximum and average price of products.

	mysql> select min(price) as min_price,max(price) as max_price,avg(price) as average_price from product;
	+-----------+-----------+--------------------+
	| min_price | max_price | average_price      |
	+-----------+-----------+--------------------+
	|        51 |      1530 | 324.50000127156574 |
	+-----------+-----------+--------------------+
	1 row in set (0.01 sec)

3.    Find number of customers in each city. 

	mysql> select  count(*) from customer;
	+----------+
	| count(*) |
	+----------+
	|        7 |
	+----------+
	1 row in set (0.00 sec)

	mysql> select city,count(id) as no_of_customer from customer group by city;
	+---------+----------------+
	| city    | no_of_customer |
	+---------+----------------+
	| ekm     |              3 |
	| ksd     |              1 |
	| mlp     |              1 |
	| calicut |              1 |
	| tvm     |              1 |
	+---------+----------------+
	5 rows in set (0.00 sec)

4.    Find number of customers in each city, only include city with more than 3 customers.

	mysql> insert into customer values(10010,'kef','kef_house','ekm',6348574976);
	Query OK, 1 row affected (0.00 sec)

	mysql> select*from customer;
	+-------+------+-----------+---------+------------+
	| id    | name | address   | city    | ph_no      |
	+-------+------+-----------+---------+------------+
	| 10002 | xyz  | xyz_house | ekm     | 9188105507 |
	| 10003 | pqr  | apk_house | ksd     | 965648878  |
	| 10005 | pkr  | pkr_house | mlp     | 7034534922 |
	| 10006 | abc  | hdj_house | ekm     | 758465846  |
	| 10007 | mrj  | fbj_house | calicut | NULL       |
	| 10008 | kst  | kst_house | ekm     | NULL       |
	| 10009 | gtf  | gtf_house | tvm     | 749578465  |
	| 10010 | kef  | kef_house | ekm     | 6348574976 |
	+-------+------+-----------+---------+------------+
	8 rows in set (0.00 sec)

	mysql> select city,count(*) as no_of_customer from customer group by city having count(*)>3;
	+------+----------------+
	| city | no_of_customer |
	+------+----------------+
	| ekm  |              4 |
	+------+----------------+
	1 row in set (0.00 sec)

5. Show data as displayed ‘who, where’ Eg: ‘customer1 lives in ekm’.

	mysql> select concat(name, " lives in ", city)as who_where from customer;
	+----------------------+
	| who_where            |
	+----------------------+
	| xyz lives in ekm     |
	| pqr lives in ksd     |
	| pkr lives in mlp     |
	| abc lives in ekm     |
	| mrj lives in calicut |
	| kst lives in ekm     |
	| gtf lives in tvm     |
	| kef lives in ekm     |
	+----------------------+
	8 rows in set (0.00 sec)

